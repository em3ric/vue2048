name: CI/CD Application

on:
  push:
    branches:
      - lab9
      - main
  pull_request:
    branches:
      - lab9
      - main
  workflow_dispatch:
    inputs:
      build_upload_artifact:
        type: boolean
        description: 'Build and Upload the artifact'
        required: false
        default: false
      build_run_analysis:
        type: boolean
        description: 'Build and Run Analysis'
        required: false
        default: false


jobs:
  push_job:
    name: Build and Upload
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event.inputs.build_upload_artifact == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
      - name: before_script
        run: |
          corepack enable
          corepack prepare pnpm@latest-10 --activate
          pnpm config set store-dir .pnpm-store
      - name: Install dependencies
        run: pnpm install
      - name: Build project
        run: pnpm build

      - name: Upload artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: vue2048-build
          path: dist/

  pull_request_job:
    name: Pull Request Checks
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || github.event.inputs.build_run_analysis == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
      - name: before_script
        run: |
          corepack enable
          corepack prepare pnpm@latest-10 --activate
          pnpm config set store-dir .pnpm-store
      - name: Install dependencies
        run: pnpm install
      - name: Build project
        run: pnpm build

      - name: Run type checking
        run: pnpm type-check
      - name: Fix linting issues
        run: pnpm lint --fix
      - name: Run linter
        run: pnpm lint
      - name: Run quality
        run: pnpm test

  # deploy_qa:
  #   name: Deploy to QA
  #   needs: [push_job, pull_request_job]
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: QA
  #   if: github.event_name == 'workflow_dispatch'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Download artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: vue2048-build
  #         path: dist
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #     - name: Install CLI
  #       run: npm install -g @azure/static-web-apps-cli
  #     - name: Deploy to QA
  #       run: pnpx @azure/static-web-apps-cli deploy ./dist --app-name stapp-vue2048-qa --env=production

  # deploy_production:
  #   name: Deploy to Production
  #   needs: [deploy_qa]
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: Prod
  #   if: github.event_name == 'workflow_dispatch'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Download artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: vue2048-build
  #         path: dist
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #     - name: Install CLI
  #       run: npm install -g @azure/static-web-apps-cli
  #     - name: Deploy to Production
  #       run: pnpx @azure/static-web-apps-cli deploy ./dist --app-name stapp-vue2048-prod --env=production